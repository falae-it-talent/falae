name: CD

on:
  workflow_run:
    workflows: CI 
    types:
      - completed

  workflow_dispatch:
  
jobs:
  CD:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH AWS
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/aws-cloud.key
          chmod 600 ~/.ssh/aws-cloud.key
          cat >>~/.ssh/config <<END
          Host aws-cloud
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/aws-cloud.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy Application and Restore Database
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          # Deploy Docker Compose on Google Cloud
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          docker-compose -f /falae/docker-compose.yml up -d

          # Stop and Remove Old Containers on Google Cloud
          ssh google-cloud 'sudo docker-compose -f /falae/docker-compose.yml down || true'

          # Pull and Run Docker Compose on Google Cloud
          ssh google-cloud 'sudo docker-compose -f /falae/docker-compose.yml pull'
          ssh google-cloud 'sudo docker-compose -f /falae/docker-compose.yml up -d'

          # Deploy the application on AWS
          ssh aws-cloud "cd /falae"
          ssh aws-cloud "touch .env"
          ssh aws-cloud "cat /etc/.env > /home/github/falae/.env"
          ssh aws-cloud "docker-compose down"
          ssh aws-cloud "docker-compose up -d"
          ssh aws-cloud "./restoreDB.sh dump.sql"

  
